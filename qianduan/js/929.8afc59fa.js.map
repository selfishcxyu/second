{"version":3,"file":"js/929.8afc59fa.js","mappings":"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","sources":["webpack://bylw/./src/views/User/Password.vue","webpack://bylw/src/views/User/Password.vue","webpack://bylw/./src/views/User/Password.vue?c7b4","webpack://bylw/./src/views/User/Password.vue?4620"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"password\"},[_c('el-form',{ref:\"resetPwdForm\",attrs:{\"rules\":_vm.rules,\"model\":_vm.resetPwdForm}},[_c('el-form-item',{attrs:{\"label\":\"旧密码\",\"prop\":\"oldpwd\"}},[_c('el-input',{attrs:{\"size\":\"medium\",\"placeholder\":\"  请输入旧密码\",\"prefix-icon\":\"el-icon-user\",\"autocomplete\":\"off\"},model:{value:(_vm.resetPwdForm.oldpwd),callback:function ($$v) {_vm.$set(_vm.resetPwdForm, \"oldpwd\", $$v)},expression:\"resetPwdForm.oldpwd\"}})],1),_c('el-form-item',{attrs:{\"label\":\"新密码\",\"prop\":\"password\"}},[_c('el-input',{attrs:{\"size\":\"medium\",\"type\":\"password\",\"placeholder\":\"  请输入新密码\",\"show-password\":true,\"prefix-icon\":\"el-icon-lock\",\"autocomplete\":\"off\"},model:{value:(_vm.resetPwdForm.password),callback:function ($$v) {_vm.$set(_vm.resetPwdForm, \"password\", $$v)},expression:\"resetPwdForm.password\"}})],1),_c('el-form-item',{attrs:{\"label\":\"确认新密码\",\"prop\":\"passwordC\"}},[_c('el-input',{attrs:{\"size\":\"medium\",\"type\":\"password\",\"placeholder\":\"  请确认新密码\",\"prefix-icon\":\"el-icon-user\",\"autocomplete\":\"off\"},model:{value:(_vm.resetPwdForm.passwordC),callback:function ($$v) {_vm.$set(_vm.resetPwdForm, \"passwordC\", $$v)},expression:\"resetPwdForm.passwordC\"}})],1),_c('el-button',{staticStyle:{\"margin\":\"10px 20px 0 0\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confirmChange}},[_vm._v(\"确认修改\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.$router.push('/person')}}},[_vm._v(\"取消\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"password\">\r\n     <el-form :rules=\"rules\" :model=\"resetPwdForm\" ref=\"resetPwdForm\">\r\n        <el-form-item label=\"旧密码\" prop=\"oldpwd\">\r\n            <el-input size=\"medium\" v-model=\"resetPwdForm.oldpwd\"\r\n                 placeholder=\"  请输入旧密码\" prefix-icon=\"el-icon-user\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"password\">\r\n            <el-input size=\"medium\" type=\"password\" v-model=\"resetPwdForm.password\"\r\n                 placeholder=\"  请输入新密码\" :show-password=\"true\" prefix-icon=\"el-icon-lock\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认新密码\" prop=\"passwordC\">\r\n            <el-input size=\"medium\" type=\"password\" v-model=\"resetPwdForm.passwordC\"\r\n                 placeholder=\"  请确认新密码\" prefix-icon=\"el-icon-user\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"confirmChange\" style=\"margin: 10px 20px 0 0;\">确认修改</el-button>\r\n        <el-button type=\"primary\" @click=\"$router.push('/person')\">取消</el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'Password',\r\n    data () {\r\n        //检测旧密码\r\n        const validatePwd = (rule,value,callback) => {\r\n            if(!value){\r\n                callback(new Error(\"请输入旧密码\"))\r\n            }else if(value.toString().length < 3 || value.toString().length > 20){\r\n                callback(new Error(\"密码长度为3-20\"))\r\n            }else if(value !== this.user.password){    //暂时无法获取新密码\r\n                callback(new Error(\"旧密码输入错误\"))\r\n            }else{\r\n                callback()\r\n            }\r\n        }\r\n        //检测新密码\r\n        const validateNewPwd = (rule,value,callback) => {\r\n            if(!value){\r\n                callback(new Error(\"请输入新密码\"))\r\n            }else if(value.toString().length < 3 || value.toString().length > 20){\r\n                callback(new Error(\"密码长度为3-20\"))\r\n            }else if(value === this.resetPwdForm.oldpwd){\r\n                callback(new Error(\"新旧密码一致！请重新输入...\"))\r\n            }else{\r\n                callback()\r\n            }\r\n        }\r\n        //检测第二次输入的新密码\r\n        const validateNewPwdC = (rule,value,callback) => {\r\n            if(!value){\r\n                callback(new Error(\"请确认密码\"))\r\n            }else if(value !== this.resetPwdForm.password){\r\n                callback(new Error(\"两次密码输入不一致！\"))\r\n            }else{\r\n                callback()\r\n            }\r\n        }\r\n        return {\r\n            user:JSON.parse(sessionStorage.getItem(\"user\")),\r\n            resetPwdForm:{\r\n                oldpwd:'',\r\n                password:'',\r\n                passwordC:''\r\n            },\r\n            rules:{\r\n                oldpwd: [\r\n                    { required: true, validator: validatePwd, trigger: 'blur'}\r\n                ],\r\n                password: [\r\n                    { required: true, validator: validateNewPwd, trigger: 'blur'}\r\n                ],\r\n                passwordC: [\r\n                    { required: true, validator: validateNewPwdC, trigger: 'blur'}\r\n                ],\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async confirmChange(){\r\n            let oldPassword = await this.getOldPassword()\r\n            console.log(oldPassword);\r\n            if(this.oldpwd !== oldPassword.data){\r\n                return \r\n            }\r\n            this.$refs.resetPwdForm.validate(valid => {\r\n                if(valid){\r\n                    this.request.post('/api/user',{id:this.user.id,username:this.user.username,password:this.resetPwdForm.password}).then(res => {\r\n                        console.log(res);\r\n                        if(res.code === '200'){\r\n                            this.$message.success(\"密码修改成功\")\r\n                            this.$router.push('person')\r\n                        }else{\r\n                            this.$message.error(\"密码修改失败\")\r\n                        }\r\n                    })   \r\n                }\r\n            })\r\n        },\r\n        getOldPassword(){\r\n            // this.request.get('/api/user')\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Password.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Password.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Password.vue?vue&type=template&id=4e02a9aa&\"\nimport script from \"./Password.vue?vue&type=script&lang=js&\"\nexport * from \"./Password.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","ref","attrs","rules","resetPwdForm","model","value","oldpwd","callback","$$v","$set","expression","password","passwordC","staticStyle","on","confirmChange","_v","$event","$router","push","staticRenderFns","name","data","user","required","validator","trigger","methods","console","id","username","getOldPassword","component"],"sourceRoot":""}